global_arguments:
   aws_default_region: us-west-1
   docker_repo: flask_sample
labels:
   ci: 
     environment: dev
     purpose: test
selectors:
   vpc_info:
     match_labels:
       car: bmw
       model: 320i
       environment: dev
       app_tier: networking
     match_keys:
       provider: aws
       region: us-west-1
     match_params:
       must_exists: True
       resource_type: vpc
   public_subnet_info:
     match_labels:
       car: bmw
       model: 320i
       environment: dev
       app_tier: networking
     match_keys:
       provider: aws
       region: us-west-1
       name: public
     match_params:
       resource_type: subnet
   sg_bastion_info:
     match_labels:
       car: bmw
       model: 320i
       environment: dev
       app_tier: networking
     match_keys:
       provider: aws
       region: us-west-1
       name: bastion
     match_params:
       must_be_one: True
       resource_type: security_group
infrastructure:
   ecr_repo:
       stack_name: elasticdev:::ecr_repo
       arguments:
          name: flask_sample
       credentials:
           - reference: aws_2
             orchestration: true
   ssh_upload:
       stack_name: elasticdev:::ec2_ssh_upload
       arguments:
          name: flask_sample_key
       credentials:
           - reference: aws_2
             orchestration: true
   dockerhost:
       stack_name: elasticdev:::ec2_docker_host
       dependencies: 
           - infrastructure::ssh_upload
           - infrastructure::ecr_repo
       arguments:
          instance_type: t2.micro
          disksize: 25
          keyname: flask_sample_key
          vpc_name: selector:::vpc_info::name
          vpc_id: selector:::vpc_info::vpc_id
          subnet_ids: selector:::public_subnet_info::subnet_id:csv
          sg_id: selector:::sg_bastion_info::sg_id
       stack_vars:
           - name: elasticdev:::ubuntu::ec2_ubuntu
             arguments:
                  ip_key: public_ip
       credentials:
           - reference: aws_2
             orchestration: true
       selectors:
         - vpc_info
         - public_subnet_info
         - sg_bastion_info
build:
   ci_example:
       create_webhook: true
       dependencies: 
           - infrastructure::dockerhost
           - infrastructure::ecr_repo
       stack_name: elasticdev:::ec2_ci
       arguments:
           repo_url: https://github.com/williaumwu/flask_sample
           repo_branch: ci
           dockerfile: Dockerfile
           dockerfile_test: Dockerfile_test
           triggered_branches:
             - ci
       credentials:
           - reference: aws_2
             orchestration: true
           - reference: docker
             delegation: true
       inputvars:
           - reference: docker_build
             delegation: true
destroy:
   stack_name: elasticdev:::ed_core::callback_delete
